# This is a basic workflow to help you get started with Actions

name: tqsdk2

on:
  repository_dispatch:
    types: [run-ci-*]

jobs:
  build-tqsdk2-wheel:
    name: ${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.python-arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-2019]
        python-version: [3.8.x, 3.9.x]
        include:
          - os: windows-2019
            triplet: x64-windows
            python-arch: x64
          - os: ubuntu-latest
            triplet: x64-linux
            python-arch: x64

    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"

    - name: Checkout
      uses: actions/checkout@v2
      with:
        repository: shinnytech/tqsdk-python-private
        ref: ${{ github.event.client_payload.ref }}
        token: ${{ secrets.GH_PAT }}

    - name: Set up Python ${{matrix.python-version}} ${{matrix.python-arch}}
      uses: actions/setup-python@v2
      with:
        python-version: ${{matrix.python-version}}
        architecture: ${{matrix.python-arch}}

    - name: Run vcpkg
      uses: lukka/run-vcpkg@v7
      with:
        vcpkgArguments: '@${{ github.workspace }}/workspace/vcpkg-x64-windows.txt'
        vcpkgDirectory: '${{ github.workspace }}/vcpkg'
        appendedCacheKey: ${{ hashFiles('**/vcpkg-x64-linux.txt', '**/vcpkg-x64-windows.txt') }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install -r requirements.txt
      
    - name: Setup ossutil
      uses: yizhoumo/setup-ossutil@v1
      with:
        endpoint: "oss-accelerate.aliyuncs.com"
        access-key-id: ${{ secrets.OSS_ACCESS_KEY }}
        access-key-secret: ${{ secrets.OSS_SECRET_KEY }}

    - name: download fclib dist from oss
      run: |
        ossutil cp -f oss://shinny-cd/fclib/${{ github.event.client_payload.fclib_oss_dir }} ${{ matrix.triplet }}.zip
        7z x ${{ matrix.triplet }}.zip -o ./fclib/dist

    - name: Build tqsdk2 bdist wheel
      shell: bash
      if: matrix.os == 'windows-2019'
      run: |
        python setup.py bdist_wheel -p win_amd64

    - name: Get gcc version and set env on linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        echo "BDIST-PLATFORM=$(echo `ldd --version | head -n 1 | awk -F' ' '{print $5}' | awk -F'.' '{printf("manylinux_%s_%s_x86_64\n", $1, $2)}'`)" >> $GITHUB_ENV

    - name: Build tqsdk2 bdist wheel
      shell: bash
      if: matrix.os == 'ubuntu-latest'
      run: |
        python setup.py bdist_wheel -p ${{ env.BDIST-PLATFORM }}    

    - name: Upload dist
      uses: actions/upload-artifact@v2
      with:
        name: tqsdk2-wheel-${{matrix.python-version}}-${{matrix.os}}
        path: dist/